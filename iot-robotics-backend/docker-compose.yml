version: '3.8'

services:
  # MQTT Broker for telemetry
  mosquitto:
    image: eclipse-mosquitto:2
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - mosquitto_data:/mosquitto/data
      - mosquitto_log:/mosquitto/log
    healthcheck:
      test: ["CMD", "mosquitto_sub", "-t", "$$SYS/#", "-C", "1", "-i", "healthcheck"]
      interval: 10s
      timeout: 5s
      retries: 5

  # TimescaleDB for time-series data
  timescaledb:
    image: timescale/timescaledb:latest-pg15
    environment:
      POSTGRES_DB: iot_robotics
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - timescale_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and pub/sub
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Python edge agent for sensor simulation
  edge-agent:
    build: ./edge-agents
    depends_on:
      mosquitto:
        condition: service_healthy
    environment:
      MQTT_BROKER: mosquitto
      MQTT_PORT: 1883
      SIMULATION_MODE: "true"
    volumes:
      - ./edge-agents:/app
    restart: unless-stopped

  # ML inference service
  ml-service:
    build: ./ml-service
    ports:
      - "8001:8000"
    environment:
      MODEL_PATH: /app/models
      REDIS_URL: redis://redis:6379
    volumes:
      - ./ml-service:/app
      - ml_models:/app/models
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mosquitto_data:
  mosquitto_log:
  timescale_data:
  redis_data:
  ml_models: